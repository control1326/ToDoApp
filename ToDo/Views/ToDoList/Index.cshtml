@using ToDo.ViewModels
@model IEnumerable<ToDoListVM>

@{
    ViewData["Title"] = "Index";
}

<div class="container">
    <div class="header">
        <div id="Date"></div>
    </div>
    <div class="row">
        <div class="col-md-8">
            <p >
                <a asp-action="Create" class="btn btn-success mt-3" >Add New To-Do</a>
            </p>
        </div>
        <div class="col-md-2" style="text-align:right">            
                <label  class="control-label mt-3 " >Filter By User:</label>
         </div>
         <div class="col-md-2 ">
                @Html.DropDownList("UserIDFilter", (SelectList)ViewBag.UserList, "Please select", new { @class = "form-control mt-3",  })
        </div>
    </div>
    <div class="row">
    <table class="table table-bordered">
        <thead>
            <tr>
                <th>Task</th>
                <th>Assigned To</th>
                <th>Complete</th>
                <th>Edit</th>
                <th>Delete</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
        {
            <tr>
                <td>
                    @item.Content
                </td>
                <td>
                        @Html.DropDownListFor(m => item.UserID, item.UserList, "Please select", new { @class = "form-control", @disabled="disabled" })
                </td>
                <td>
                        <input type="checkbox" asp-for=@item.IsComplete disabled="disabled" />
                </td>
                <td>
                    <a asp-action="Edit" class="btn btn-info" asp-route-id="@item.Id" >Edit</a>
                </td>
                <td>
                    <a asp-action="Delete" class="btn btn-danger" asp-route-id="@item.Id">Delete</a>
                </td>
            </tr>
        
        }

        </tbody>

    </table>

    </div>



</div>

@section scripts {
    <script>
        const dateElement = document.getElementById("Date");
        const options = {weekday: 'long', month: 'short', day: 'numeric'};
        const today = new Date();
        dateElement.innerHTML = today.toLocaleDateString("en-Us", options);
    </script>
}